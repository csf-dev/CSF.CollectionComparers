//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSF.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CSF.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The alphabetic reference must be in a valid format..
        /// </summary>
        internal static string AlphabeticReferenceMustBeInValidFormat {
            get {
                return ResourceManager.GetString("AlphabeticReferenceMustBeInValidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create a directory corresponding to the root of a file system: {0}.
        /// </summary>
        internal static string CannotCreateRootOfFilesystemFormat {
            get {
                return ResourceManager.GetString("CannotCreateRootOfFilesystemFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating alphabetic references for negative integers is not supported when the reference is to be zero-based..
        /// </summary>
        internal static string CannotCreateZeroBasedNegativeAlphabeticReference {
            get {
                return ResourceManager.GetString("CannotCreateZeroBasedNegativeAlphabeticReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown and attempts were made to &apos;fix&apos;/preserve its stack trace, these attempts failed.
        ///Try adding a constructor of signature (SerializationInfo, StreamingContext) to the inner exception type.
        ///If this is impossible then you cannot use FixStackTrace on exceptions of this type on the current platform, use TryFixStackTrace instead..
        /// </summary>
        internal static string CannotFixStackTrace {
            get {
                return ResourceManager.GetString("CannotFixStackTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The count of non-random bytes must be between {0} and {1} (inclusive)..
        /// </summary>
        internal static string CountOfGuidNonRandomBytesOutOfRangeFormat {
            get {
                return ResourceManager.GetString("CountOfGuidNonRandomBytesOutOfRangeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current character position must not be less than zero..
        /// </summary>
        internal static string CurrentCharacterPositionMustNotBeNegative {
            get {
                return ResourceManager.GetString("CurrentCharacterPositionMustNotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An empty string may represent zero in non-zero-based scenarios but it is not permitted in zero-based scenarios..
        /// </summary>
        internal static string EmptyStringNotPermittedForZeroBasedReferences {
            get {
                return ResourceManager.GetString("EmptyStringNotPermittedForZeroBasedReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base filename must not be an empty string..
        /// </summary>
        internal static string FileBaseNameMustNotBeEmpty {
            get {
                return ResourceManager.GetString("FileBaseNameMustNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filename must not be an empty string..
        /// </summary>
        internal static string FilenameMustNotBeEmpty {
            get {
                return ResourceManager.GetString("FilenameMustNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A fraction denominator cannot be zero..
        /// </summary>
        internal static string FractionDenominatorCannotBeZero {
            get {
                return ResourceManager.GetString("FractionDenominatorCannotBeZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only valid for fractions simplify to an integer..
        /// </summary>
        internal static string FractionMustSimplifyToInteger {
            get {
                return ResourceManager.GetString("FractionMustSimplifyToInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The absolute integer value to convert to an alphabetic reference must not be less than one for non-zero-based operations..
        /// </summary>
        internal static string IntegerValueMustNotBeLessThanOneForNonZeroBasedOperations {
            get {
                return ResourceManager.GetString("IntegerValueMustNotBeLessThanOneForNonZeroBasedOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The absolute integer value to convert to an alphabetic reference must not be less than zero..
        /// </summary>
        internal static string IntegerValueMustNotBeLessThanZero {
            get {
                return ResourceManager.GetString("IntegerValueMustNotBeLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string must a correctly-formatted fraction..
        /// </summary>
        internal static string InvalidFractionFormat {
            get {
                return ResourceManager.GetString("InvalidFractionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of parameter &apos;{0}&apos; must be a child of the parameter &apos;{1}&apos;..
        /// </summary>
        internal static string MustBeChildOfRootFormat {
            get {
                return ResourceManager.GetString("MustBeChildOfRootFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only supported for enumerations decorated with `{0}&apos;.
        ///Unsupported type:`{1}&apos;.
        /// </summary>
        internal static string MustBeDecoratedWithFlagsAttribute {
            get {
                return ResourceManager.GetString("MustBeDecoratedWithFlagsAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a defined member of the enumeration..
        /// </summary>
        internal static string MustBeEnumerationConstantDefaultMessage {
            get {
                return ResourceManager.GetString("MustBeEnumerationConstantDefaultMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be a defined member of the enumeration `{1}&apos;.
        ///Name:{0}.
        /// </summary>
        internal static string MustBeEnumerationConstantFormat {
            get {
                return ResourceManager.GetString("MustBeEnumerationConstantFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arrays representing GUIDs must contain exactly 16 bytes..
        /// </summary>
        internal static string MustBeSixteenBytesInAGuid {
            get {
                return ResourceManager.GetString("MustBeSixteenBytesInAGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only supported for types which represent enumerations.
        ///Unsupported type:`{0}&apos;.
        /// </summary>
        internal static string OnlySupportedForEnumTypesFormat {
            get {
                return ResourceManager.GetString("OnlySupportedForEnumTypesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The `{0}&apos; must be valid for an enumeration..
        /// </summary>
        internal static string TypeCodeMustBeValid {
            get {
                return ResourceManager.GetString("TypeCodeMustBeValid", resourceCulture);
            }
        }
    }
}
